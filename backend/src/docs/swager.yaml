openapi: 3.0.0
info:
  version: 1.0.0
  title: FullStack Developers Spa Daily Report API
  description: An API for the FullStack Spa Daily Report
servers:
  - url: http://localhost:3000
paths:
  /users:
    get:
      description: Returns a list of users
      responses:
        "200":
          description: List of users returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{_id}:
    get:
      description: Get a user
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a User
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/User"
        "404":
          description: User based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a user
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Removes a user
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        "404":
          description: User based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /spadatas:
    get:
      description: Returns a list of spadatas
      responses:
        "200":
          description: List of spadatas returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Spadatas"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new spadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Spadatas"
      responses:
        "201":
          description: Spadata has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spadatas"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /spadatas/{_id}:
    get:
      description: Get a spadata
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a Spadata
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Spadatas"
        "404":
          description: Spadata based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a spadata
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Spadatas"
      responses:
        "200":
          description: Spadata has been updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spadatas"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Removes a spadata
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Spadata has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        "404":
          description: Spadata based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /spareport:
    get:
      description: Returns a list of spareport
      responses:
        "200":
          description: List of spareport returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Spareport"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new spadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Spareport"
      responses:
        "201":
          description: Spadata has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spareport"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /spareports/{_id}:
    get:
      description: Get a spareport
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a Spareport
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Spareport"
        "404":
          description: Spareport based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a spareport
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Spareport"
      responses:
        "200":
          description: Spareport has been updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Spareport"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Removes a spareport
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Spareport has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        "404":
          description: Spareport based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /weather:
    get:
      description: Returns a list of weather
      responses:
        "200":
          description: List of weather returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Weather"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new weather
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Weather"
      responses:
        "201":
          description: Spadata has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Weather"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /weather/{_id}:
    get:
      description: Get a weather
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a weather data
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Weather"
        "404":
          description: Weather based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a weather
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Weather"
      responses:
        "200":
          description: Weather has been updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Weather"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Removes a weather data
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Weather has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        "404":
          description: Weather based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /wellnessdatas:
    get:
      description: Returns a list of wellnessdatas
      responses:
        "200":
          description: List of wellnessdatas returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WellnessDatas"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new spadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WellnessDatas"
      responses:
        "201":
          description: Spadata has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WellnessDatas"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /wellnessdatas/{_id}:
    get:
      description: Get a wellnessdatas
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a Wellnessdatas
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/WellnessDatas"
        "404":
          description: Wellnessdatas based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      description: Updates a wellnessdata
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WellnessDatas"
      responses:
        "200":
          description: Wellnessdatas has been updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WellnessDatas"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      description: Removes a wellnessdata
      parameters:
        - in: path
          name: _id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Spareport has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        "404":
          description: Spareport based on id is doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      required:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        address:
          type: string
        role:
          type: number
        active:
          type: boolean
        password:
          type: string
        accessToken:
          type: string
    Spadatas:
      type: object
      required:
        - time
        - sumOfGuests
        - sumOfSauna
        - dataLogger
      properties:
        time:
          type: string
        sumOfGuests:
          type: number
        sumOfSauna:
          type: number
        dataLogger:
          type: string
    Spareport:
      type: object
      required:
        - time
        - report
        - dataLogger
      properties:
        time:
          type: string
        report:
          type: string
        dataLogger:
          type: string
    Weather:
      type: object
      required:
        - time
        - waterInside
        - waterOutside
        - airMin
        - airMax
        - weatherCondition
        - dataLogger
      properties:
        time:
          type: string
        waterInside:
          type: number
        waterOutside:
          type: number
        airMin:
          type: number
        airMax:
          type: number
        weatherCondition:
          type: string
        dataLogger:
          type: string
    Wellnessdatas:
      type: object
      required:
        - time
        - massage
        - pediAndManiCure
        - cosmetics
        - medicaExamination
        - mudSale
        - mudTreatment
        - weightBath
        - phisioTherapy
        - dataLogger
      properties:
        time:
          type: string
        massage:
          type: number
        pediAndManiCure:
          type: number
        cosmetics:
          type: number
        medicaExamination:
          type: number
        mudSale:
          type: number
        mudTreatment:
          type: number
        weightBath:
          type: number
        phisioTherapy:
          type: number
        dataLogger:
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
